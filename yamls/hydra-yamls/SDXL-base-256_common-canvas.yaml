project: CommonCanvas
name: SDXL-base-256 CommonCanvas
seed: 17
eval_first: false
algorithms:
  low_precision_groupnorm:
    attribute: unet
    precision: amp_fp16
  low_precision_layernorm:
    attribute: unet
    precision: amp_fp16
model:
  _target_: diffusion.models.models.stable_diffusion_xl
  pretrained: false
  clip_qkv: null
  unet_model_name: stabilityai/stable-diffusion-xl-base-1.0
  vae_model_name: madebyollin/sdxl-vae-fp16-fix
  precomputed_latents: false
  encode_latents_in_fp16: true
  fsdp: true
  val_metrics:
    - _target_: torchmetrics.MeanSquaredError
dataset:
  # for debug
  # train_batch_size: 16
  # eval_batch_size: 16
  
  # for training
  train_batch_size: 1024
  eval_batch_size: 1024

  train_dataset:
    _target_: diffusion.datasets.hfds.build_hfds_dataloader
    dataset_path: common-canvas/commoncatalog-cc-by
    resize_size: 256
    image_key: jpg
    caption_key: blip2_caption
    split: train

    dataloader_kwargs:
      drop_last: true
      num_workers: 8
      persistent_workers: true
      pin_memory: true
      prefetch_factor: 2

  eval_dataset:
    _target_: diffusion.datasets.hfds.build_hfds_dataloader
    dataset_path: common-canvas/commoncatalog-cc-by-sa
    num_samples: 10000
    resize_size: 256
    image_key: jpg
    caption_key: blip2_caption
    split: train

    dataloader_kwargs:
      drop_last: true
      num_workers: 8
      persistent_workers: true
      pin_memory: true
      prefetch_factor: 2

optimizer:
  _target_: torch.optim.AdamW
  lr: 1.0e-4
  weight_decay: 0.01
scheduler:
  _target_: composer.optim.LinearWithWarmupScheduler
  t_warmup: 10000ba
  alpha_f: 1.0
logger:
  wandb:
    _target_: composer.loggers.wandb_logger.WandBLogger
    name: ${name}
    project: ${project}
    group: ${name}
callbacks:
  speed_monitor:
    _target_: composer.callbacks.speed_monitor.SpeedMonitor
    window_size: 10
  lr_monitor:
    _target_: composer.callbacks.lr_monitor.LRMonitor
  memory_monitor:
    _target_: composer.callbacks.memory_monitor.MemoryMonitor
  runtime_estimator:
    _target_: composer.callbacks.runtime_estimator.RuntimeEstimator
  optimizer_monitor:
    _target_: composer.callbacks.OptimizerMonitor
  image_monitor:
    _target_: diffusion.callbacks.log_diffusion_images.LogDiffusionImages
    prompts: # add any prompts you would like to visualize
      - A dog wearing a spacesuit
      - An astronaut riding a horse
    size: 256 # generated image resolution
    guidance_scale: 3
trainer:
  _target_: composer.Trainer

  # max_duration is calculated as follows:
  # 14,581,672 (number of rows) // 1,024 (batch size) = 14,239
  # ref. https://huggingface.co/datasets/common-canvas/commoncatalog-cc-by
  max_duration: 14239ba
  eval_interval: 2500ba
  eval_subset_num_batches: 1024
  device_train_microbatch_size: # Device microbatch size
  run_name: ${name}
  seed: ${seed}
  
  # for debug
  autoresume: false
  # for training
  autoresume: true
  save_folder: save_folder
  save_interval: 1000ba
  save_overwrite: false

  # device: cpu
  device: gpu
  fsdp_config:
    sharding_strategy: "SHARD_GRAD_OP"
